import java.util.Properties

buildscript {
    repositories {
        google()
        jcenter()
    }
    ext {
        kotlin_version = '1.5.31'
        flutter_version = '3.22.1'
    }
    dependencies {
        classpath "com.android.tools.build:gradle:4.1.0"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.google.gms:google-services:4.3.10" // Esta linha está integrada ao Firebase.
        classpath "dev.flutter:flutter-gradle-plugin:$flutter_version"
    }
}

plugins {
    id "com.android.application"
    id "kotlin-android"
    // O plugin Flutter Gradle deve ser aplicado após os plugins Gradle Android e Kotlin.
    id "dev.flutter.flutter-gradle-plugin"
    id "com.google.gms.google-services" // Esta linha para aplicar o plugin do Google Services
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

android {
    compileSdkVersion 31 // Defina a versão correta do SDK de compilação
    buildToolsVersion "31.0.0" // Defina a versão correta das ferramentas de build

    defaultConfig {
        applicationId "com.example.denuncias_app"
        minSdkVersion flutter.minSdkVersion.toInteger()
        targetSdkVersion flutter.targetSdkVersion.toInteger()
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    buildTypes {
        release {
            // TODO: Configure a assinatura para a build de lançamento.
            // Por enquanto, estamos usando as chaves de depuração para que `flutter run --release` funcione.
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}

apply plugin: 'com.google.gms.google-services'
